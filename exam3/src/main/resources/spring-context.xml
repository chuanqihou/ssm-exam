<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--组件扫描-->
    <context:component-scan base-package="com.chuanqihou.exam.service"/>
    <!--读取db.properties文件-->
    <context:property-placeholder location="classpath:db.properties" system-properties-mode="FALLBACK"/>

    <!--配置druid数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <!--驱动类-->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <!--数据库url-->
        <property name="url" value="${jdbc.url}"/>
        <!--数据库用户名-->
        <property name="username" value="${jdbc.username}"/>
        <!--数据库密码-->
        <property name="password" value="${jdbc.password}"/>
        <!--初始连接数-->
        <property name="initialSize" value="${initialSize}"/>
        <!--最大活跃数-->
        <property name="maxActive" value="${maxActive}"/>
        <!--显示druid-->
        <property name="filters" value="stat,wall,log4j"/>
    </bean>

    <!--创建会话工厂-->
    <bean id="sessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--导入数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置别名-->
        <property name="typeAliasesPackage" value="com.chuanqihou.exam.domain,com.chuanqihou.exam.dto"/>
        <!--配置插件-->
        <property name="plugins">
            <array>
                <!--分页插件-->
                <bean id="pageInterceptor" class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <!--pageSizeZero：默认值为 false，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit = 0
                        就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型-->
                        <value>
                            pageSizeZero=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
        <!--mybatis设置 配置-->
        <property name="configuration" ref="configuration"/>
        <!--扫描mapper.xml文件-->
        <property name="mapperLocations" value="classpath*:mapper/*.xml"/>
    </bean>

    <!--mybatis设置 配置-->
    <bean id="configuration" class="org.apache.ibatis.session.Configuration">
        <!--配置日志-->
        <property name="logImpl" value="org.apache.ibatis.logging.log4j.Log4jImpl"/>
        <!--开启mybatis二级缓存-->
        <property name="cacheEnabled" value="true"/>
        <!--开启自动映射实体类与数据库字段名【驼峰】-->
        <property name="mapUnderscoreToCamelCase" value="true"/>
    </bean>

    <!--配置mapper接口扫描-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--引入会话工厂-->
        <property name="sqlSessionFactoryBeanName" value="sessionFactoryBean"/>
        <!--扫描mapper接口-->
        <property name="basePackage" value="com.chuanqihou.exam.mapper"/>
    </bean>

    <!--配置声明式事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--引入数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--启动基于注解的声明式事务管理功能-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>